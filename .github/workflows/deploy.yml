name: Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]
    paths:
      - "src/**"
      - "Dockerfile"
      - ".github/workflows/deploy.yml"
  workflow_dispatch: {}

env:
  REGION: ${{ secrets.GCP_REGION }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.CLOUD_RUN_SERVICE || 'telebot' }}
  IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/telebot-repo/telebot:github-${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_PAY_TOKEN: ${{ secrets.TELEGRAM_PAY_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Авторизация в GCP по JSON ключу из секрета
      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 2) Установка gcloud (будет уже авторизован)
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      # 3) Явно укажем проект (иногда полезно)
      - name: Set gcloud project
        run: gcloud config set project "${{ env.PROJECT_ID }}"

      - name: Enable required APIs
        run: |
          gcloud services enable run.googleapis.com artifactregistry.googleapis.com cloudbuild.googleapis.com

      - name: Create AR repo if missing
        run: |
          gcloud artifacts repositories describe telebot-repo --location=${{ env.REGION }} || \
          gcloud artifacts repositories create telebot-repo \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="Telegram bot repo"

      - name: Build & push image with Cloud Build
        run: gcloud builds submit --tag ${{ env.IMAGE }} .

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "Telegram__BotToken=${{ env.TELEGRAM_BOT_TOKEN }},Telegram__PaymentProviderToken=${{ env.TELEGRAM_PAY_TOKEN }},Telegram__Currency=EUR"

      - name: Output service URL
        id: url
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Service URL: $URL"

      - name: Set Telegram webhook
        if: ${{ env.TELEGRAM_BOT_TOKEN != '' }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/setWebhook" \
            -d "url=${{ steps.url.outputs.url }}/bot/${{ env.TELEGRAM_BOT_TOKEN }}" \
            && curl -s "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/getWebhookInfo"
